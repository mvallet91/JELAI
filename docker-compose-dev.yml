# JupyterLab and middleware development environment
# For single-user experimentation or development, use this docker-compose file to start a JupyterLab and middleware development environment.

services:
  notebook-dev:
    build:
      context: ./jupyterhub-docker/user-notebook
      dockerfile: Dockerfile
      args:
        - CHAT_DIR=chats
    volumes:
        # Mount notebook workspace and log data for development
        - "notebook-workspace:/home/jovyan/work"
        - "log-data:/home/jovyan/logs" 
    environment:
      - JUPYTER_TOKEN=dev  # Simple token for development access
      - TA_MIDDLEWARE_URL=http://middleware-dev:8004
    image: user-notebook-dev
    container_name: notebook-dev
    ports:
      - "8888:8888"  # Expose JupyterLab directly
    networks:
      - jelai-dev-network

  middleware-dev:
    build:
      context: ./jupyterhub-docker/middleware
      dockerfile: Dockerfile
    image: middleware-dev
    container_name: middleware-dev
    networks:
      - jelai-dev-network
    volumes:
      # Mount middleware code for development
      - "middleware-dev-data:/var/log/jelai"
      - "chat-histories:/app/chat_histories"
    # Mount learning objectives file for development
      - "./jupyterhub-docker/middleware/ea-handler.py:/app/ea-handler.py"
      - "./jupyterhub-docker/middleware/ta-handler.py:/app/ta-handler.py"
      - "./jupyterhub-docker/middleware/utils.py:/app/utils.py"
      - "./jupyterhub-docker/middleware/inputs:/app/inputs"
    ports:
      - "24224:24224"
      - "8003:8003"  # EA handler server
      - "8004:8004"  # TA handler server

volumes:
  chat-histories:
  middleware-dev-data:
  notebook-workspace:
  log-data:

networks:
  jelai-dev-network:
    name: jelai-dev-network
    driver: bridge